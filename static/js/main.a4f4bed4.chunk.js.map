{"version":3,"sources":["../node_modules/@ionic/core/dist/esm-es5 lazy /^/.*/.entry/.js$/ include: /.entry/.js$/ exclude: /.system/.entry/.js$/ groupOptions: {} namespace object","../node_modules/ionicons/dist/esm/legacy lazy /^/.*/.entry/.js$/ include: /.entry/.js$/ exclude: /.system/.entry/.js$/ groupOptions: {} namespace object","enum/difficulty.ts","enum/importance.ts","enum/status.ts","components/Menu.tsx","components/CreateTask.tsx","service/ToDoDb.ts","service/task-service.ts","service/network-service.ts","components/EditTask.tsx","components/TaskItem.tsx","pages/Home.tsx","pages/List.tsx","components/CreateAccount.tsx","pages/SignIn.tsx","components/AddToHomeScreenPrompt.jsx","components/InstallPwa.jsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","Difficulty","Importance","Status","withRouter","appPages","contentId","type","color","appPage","index","key","autoHide","routerLink","url","routerDirection","slot","icon","title","CreateTask","CreateTaskProps","useState","value","setValue","handleSubmitToCreateTask","event","a","preventDefault","addTask","onSubmit","noValidate","autoComplete","placeholder","onIonChange","target","autofocus","ToDoDb","tasks","preferences","databaseUpdates","version","stores","table","Dexie","TaskService","networkconnectivity","db","domain","getPath","deletePath","getRemoteUpdatesPath","getOwnerUpdatesPath","countTasksPath","getMultipleTasksPath","putPath","isOnline","remoteUpdatesGetPath","this","subscribeToNetworkConnectivity","networkService","connectionChanged","subscribe","online","consola","info","task","lastModified","Date","now","updateBrowserTaskName","updateRemoteTask","catch","error","browserId","updatedTask","transaction","update","browserTask","remoteTaskId","undefined","remoteId","name","updateBrowserTaskStatus","status","where","equals","delete","axios","response","toArray","owner","newUserTask","insertBrowserTask","createRemoteTask","put","remoteTask","deadline","difficulty","importance","created","remoteTasks","browserTasks","forEach","element","push","convertRemoteTaskToBrowserTask","reject","get","browserTaskFromRemote","data","post","RegExp","exec","headers","location","parseInt","remotes","allBrowserTasks","allRemoteTasks","convertRemoteTasksToBrowserTasks","remoteTasksIds","x","browserTasksIds","remoteIdsNotInBrowser","filter","includes","NetworkService","internalConnectionChanged","Subject","window","addEventListener","updateOnlineStatus","navigator","onLine","asObservable","next","EditTask","EditTaskProps","currentTask","userValue","handleSubmitToEditTask","editTask","TaskItem","taskItemProps","editable","itemAttributes","button","detail","detailIcon","COMPLETED","checkmarkCircleOutline","labelAttributes","synced","label","React","createElement","IonLabel","IonItem","HomePage","setTasks","isLoading","setIsLoading","tasksRemaining","setTasksRemaining","setEditability","addingNewTask","setAddingNewTask","toggleCreateTask","getIndexOfTaskWithId","findIndex","taskService","useEffect","ACTIVE","length","interval","setInterval","getRemoteDatabaseUpdates","requestUpdate","getAllRemoteTasks","getAllBrowserTasksByOwner","getMissingTasksFromRemote","matchingRemoteTask","find","y","matchingConvertedTask","updateBrowserTask","getLocalDatabaseUpdates","updateRequested","getAllBrowserTasks","clearInterval","results","taskIndex","allExistingTasks","slice","updateTaskName","toggleEditablility","selectedTask","newValue","Map","set","updateEditable","has","toggleTaskStatus","existingTaskToUpdate","toggleTaskStatusIndicator","updateTaskStatus","className","items","existsOnRemote","statusToggleMessage","side","onClick","existingTasks","splice","deleteBrowserTaskById","deleteRemoteTaskById","removeTask","vertical","horizontal","add","uuidv4","NORMAL","MEDIUM","newTasks","insertTask","taskWithRemoteId","newTasksWithRemoteId","updateBrowserTaskWithRemoteTaskId","ListItems","icons","flask","wifi","beer","football","basketball","paperPlane","americanFootball","boat","bluetooth","build","ListPage","CreateAccount","CreateAccountProps","commonName","setCommonName","userName","setUserName","password","setPassword","handleSubmitToCreateAccount","addUser","console","log","SignIn","AddToHomescreenPrompt","prompt","setPrompt","initializePreferencesIfNecessary","count","username","promptUserForInstallation","ready","removeEventListener","InstallPwa","promptToInstall","isAddToHomescreenVisible","setIsAddToHomescreenVisible","setPromptUserForInstallation","hideAddToHomescreen","doNotPromptAgain","Snackbar","anchorOrigin","open","autoHideDuration","SnackbarContent","message","style","display","alignItems","marginRight","backgroundColor","action","IconButton","aria-label","person","home","list","App","basename","path","component","exact","Home","List","render","to","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","ReactDOM","document","getElementById","URL","process","href","origin","fetch","contentType","indexOf","unregister","reload","checkValidServiceWorker"],"mappings":"uJAAA,IAAIA,EAAM,CACT,2CAA4C,CAC3C,IACA,IAED,kCAAmC,CAClC,IACA,IAED,iCAAkC,CACjC,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,iCAAkC,CACjC,IACA,IAED,gCAAiC,CAChC,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,yBAA0B,CACzB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,gCAAiC,CAChC,IACA,IAED,+BAAgC,CAC/B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,qBAAsB,CACrB,IACA,IAED,uCAAwC,CACvC,IACA,IAED,sCAAuC,CACtC,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,mCAAoC,CACnC,IACA,IAED,kCAAmC,CAClC,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,uBAAwB,CACvB,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,kCAAmC,CAClC,IACA,IAED,iCAAkC,CACjC,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,iCAAkC,CACjC,IACA,IAED,gCAAi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","file":"static/js/main.a4f4bed4.chunk.js","sourcesContent":["var map = {\n\t\"./ion-action-sheet-controller_8.entry.js\": [\n\t\t184,\n\t\t43\n\t],\n\t\"./ion-action-sheet-ios.entry.js\": [\n\t\t185,\n\t\t44\n\t],\n\t\"./ion-action-sheet-md.entry.js\": [\n\t\t186,\n\t\t45\n\t],\n\t\"./ion-alert-ios.entry.js\": [\n\t\t187,\n\t\t24\n\t],\n\t\"./ion-alert-md.entry.js\": [\n\t\t188,\n\t\t25\n\t],\n\t\"./ion-app_8-ios.entry.js\": [\n\t\t189,\n\t\t11\n\t],\n\t\"./ion-app_8-md.entry.js\": [\n\t\t190,\n\t\t12\n\t],\n\t\"./ion-avatar_3-ios.entry.js\": [\n\t\t191,\n\t\t46\n\t],\n\t\"./ion-avatar_3-md.entry.js\": [\n\t\t192,\n\t\t47\n\t],\n\t\"./ion-back-button-ios.entry.js\": [\n\t\t193,\n\t\t48\n\t],\n\t\"./ion-back-button-md.entry.js\": [\n\t\t194,\n\t\t49\n\t],\n\t\"./ion-backdrop-ios.entry.js\": [\n\t\t195,\n\t\t81\n\t],\n\t\"./ion-backdrop-md.entry.js\": [\n\t\t196,\n\t\t82\n\t],\n\t\"./ion-button_2-ios.entry.js\": [\n\t\t197,\n\t\t50\n\t],\n\t\"./ion-button_2-md.entry.js\": [\n\t\t198,\n\t\t51\n\t],\n\t\"./ion-card_5-ios.entry.js\": [\n\t\t199,\n\t\t52\n\t],\n\t\"./ion-card_5-md.entry.js\": [\n\t\t200,\n\t\t53\n\t],\n\t\"./ion-checkbox-ios.entry.js\": [\n\t\t201,\n\t\t54\n\t],\n\t\"./ion-checkbox-md.entry.js\": [\n\t\t202,\n\t\t55\n\t],\n\t\"./ion-chip-ios.entry.js\": [\n\t\t203,\n\t\t56\n\t],\n\t\"./ion-chip-md.entry.js\": [\n\t\t204,\n\t\t57\n\t],\n\t\"./ion-col_3.entry.js\": [\n\t\t205,\n\t\t83\n\t],\n\t\"./ion-datetime_3-ios.entry.js\": [\n\t\t206,\n\t\t20\n\t],\n\t\"./ion-datetime_3-md.entry.js\": [\n\t\t207,\n\t\t21\n\t],\n\t\"./ion-fab_3-ios.entry.js\": [\n\t\t208,\n\t\t58\n\t],\n\t\"./ion-fab_3-md.entry.js\": [\n\t\t209,\n\t\t59\n\t],\n\t\"./ion-img.entry.js\": [\n\t\t210,\n\t\t84\n\t],\n\t\"./ion-infinite-scroll_2-ios.entry.js\": [\n\t\t211,\n\t\t39\n\t],\n\t\"./ion-infinite-scroll_2-md.entry.js\": [\n\t\t212,\n\t\t40\n\t],\n\t\"./ion-input-ios.entry.js\": [\n\t\t213,\n\t\t60\n\t],\n\t\"./ion-input-md.entry.js\": [\n\t\t214,\n\t\t61\n\t],\n\t\"./ion-item-option_3-ios.entry.js\": [\n\t\t215,\n\t\t62\n\t],\n\t\"./ion-item-option_3-md.entry.js\": [\n\t\t216,\n\t\t63\n\t],\n\t\"./ion-item_8-ios.entry.js\": [\n\t\t217,\n\t\t64\n\t],\n\t\"./ion-item_8-md.entry.js\": [\n\t\t218,\n\t\t65\n\t],\n\t\"./ion-loading-ios.entry.js\": [\n\t\t219,\n\t\t26\n\t],\n\t\"./ion-loading-md.entry.js\": [\n\t\t220,\n\t\t27\n\t],\n\t\"./ion-menu_4-ios.entry.js\": [\n\t\t221,\n\t\t18\n\t],\n\t\"./ion-menu_4-md.entry.js\": [\n\t\t222,\n\t\t19\n\t],\n\t\"./ion-modal-ios.entry.js\": [\n\t\t223,\n\t\t14\n\t],\n\t\"./ion-modal-md.entry.js\": [\n\t\t224,\n\t\t15\n\t],\n\t\"./ion-nav_5.entry.js\": [\n\t\t225,\n\t\t13\n\t],\n\t\"./ion-popover-ios.entry.js\": [\n\t\t226,\n\t\t16\n\t],\n\t\"./ion-popover-md.entry.js\": [\n\t\t227,\n\t\t17\n\t],\n\t\"./ion-progress-bar-ios.entry.js\": [\n\t\t228,\n\t\t66\n\t],\n\t\"./ion-progress-bar-md.entry.js\": [\n\t\t229,\n\t\t67\n\t],\n\t\"./ion-radio_2-ios.entry.js\": [\n\t\t230,\n\t\t32\n\t],\n\t\"./ion-radio_2-md.entry.js\": [\n\t\t231,\n\t\t33\n\t],\n\t\"./ion-range-ios.entry.js\": [\n\t\t232,\n\t\t68\n\t],\n\t\"./ion-range-md.entry.js\": [\n\t\t233,\n\t\t69\n\t],\n\t\"./ion-refresher_2-ios.entry.js\": [\n\t\t234,\n\t\t41\n\t],\n\t\"./ion-refresher_2-md.entry.js\": [\n\t\t235,\n\t\t42\n\t],\n\t\"./ion-reorder_2-ios.entry.js\": [\n\t\t236,\n\t\t37\n\t],\n\t\"./ion-reorder_2-md.entry.js\": [\n\t\t237,\n\t\t38\n\t],\n\t\"./ion-ripple-effect.entry.js\": [\n\t\t238,\n\t\t85\n\t],\n\t\"./ion-route_4.entry.js\": [\n\t\t239,\n\t\t70\n\t],\n\t\"./ion-searchbar-ios.entry.js\": [\n\t\t240,\n\t\t28\n\t],\n\t\"./ion-searchbar-md.entry.js\": [\n\t\t241,\n\t\t29\n\t],\n\t\"./ion-segment_2-ios.entry.js\": [\n\t\t242,\n\t\t71\n\t],\n\t\"./ion-segment_2-md.entry.js\": [\n\t\t243,\n\t\t72\n\t],\n\t\"./ion-select_3-ios.entry.js\": [\n\t\t244,\n\t\t34\n\t],\n\t\"./ion-select_3-md.entry.js\": [\n\t\t245,\n\t\t35\n\t],\n\t\"./ion-slide_2-ios.entry.js\": [\n\t\t246,\n\t\t86\n\t],\n\t\"./ion-slide_2-md.entry.js\": [\n\t\t247,\n\t\t87\n\t],\n\t\"./ion-spinner.entry.js\": [\n\t\t248,\n\t\t73\n\t],\n\t\"./ion-split-pane-ios.entry.js\": [\n\t\t249,\n\t\t88\n\t],\n\t\"./ion-split-pane-md.entry.js\": [\n\t\t250,\n\t\t89\n\t],\n\t\"./ion-tab-bar_2-ios.entry.js\": [\n\t\t251,\n\t\t74\n\t],\n\t\"./ion-tab-bar_2-md.entry.js\": [\n\t\t252,\n\t\t75\n\t],\n\t\"./ion-tab_2.entry.js\": [\n\t\t253,\n\t\t36\n\t],\n\t\"./ion-text.entry.js\": [\n\t\t254,\n\t\t76\n\t],\n\t\"./ion-textarea-ios.entry.js\": [\n\t\t255,\n\t\t77\n\t],\n\t\"./ion-textarea-md.entry.js\": [\n\t\t256,\n\t\t78\n\t],\n\t\"./ion-toast-ios.entry.js\": [\n\t\t257,\n\t\t30\n\t],\n\t\"./ion-toast-md.entry.js\": [\n\t\t258,\n\t\t31\n\t],\n\t\"./ion-toggle-ios.entry.js\": [\n\t\t259,\n\t\t22\n\t],\n\t\"./ion-toggle-md.entry.js\": [\n\t\t260,\n\t\t23\n\t],\n\t\"./ion-virtual-scroll.entry.js\": [\n\t\t261,\n\t\t90\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 141;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./ion-icon.entry.js\": [\n\t\t265,\n\t\t98\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 143;\nmodule.exports = webpackAsyncContext;","export enum Difficulty {\r\n    VERY_EASY = \"VERY_EASY\",\r\n    EASY = \"EASY\",\r\n    NORMAL = \"NORMAL\",\r\n    HARD = \"HARD\",\r\n    VERY_HARD = \"VERY_HARD\",\r\n}","export enum Importance {\r\n    LOW = \"LOW\",\r\n    MEDIUM = \"MEDIUM\",\r\n    HIGH = \"HIGH\" \r\n}","export enum Status {\r\n    ACTIVE = \"ACTIVE\",\r\n    COMPLETED = \"COMPLETED\"\r\n}","import {\n  IonContent,\n  IonHeader,\n  IonIcon,\n  IonItem,\n  IonLabel,\n  IonList,\n  IonMenu,\n  IonMenuToggle,\n  IonTitle,\n  IonToolbar\n} from '@ionic/react';\nimport React from 'react';\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\nimport { AppPage } from '../declarations';\n\ninterface MenuProps extends RouteComponentProps {\n  appPages: AppPage[];\n}\n\nconst Menu: React.FunctionComponent<MenuProps> = ({ appPages }) => (\n  <IonMenu contentId=\"main\" type=\"overlay\">\n    <IonHeader>\n      <IonToolbar color='tertiary'>\n        <IonTitle>Menu</IonTitle>\n      </IonToolbar>\n    </IonHeader>\n    <IonContent>\n      <IonList>\n        {appPages.map((appPage, index) => {\n          return (\n            <IonMenuToggle key={index} autoHide={false}>\n              <IonItem routerLink={appPage.url} routerDirection=\"none\">\n                <IonIcon slot=\"start\" icon={appPage.icon} />\n                <IonLabel>{appPage.title}</IonLabel>\n              </IonItem>\n            </IonMenuToggle>\n          );\n        })}\n      </IonList>\n    </IonContent>\n  </IonMenu>\n);\n\nexport default withRouter(Menu);\n","import React, { useState } from 'react';\r\nimport {\r\n\tIonItem,\r\n\tIonLabel,\r\n\tIonInput\r\n} from '@ionic/react';\r\n\r\n\r\ninterface ICreateTaskProps {\r\n\taddTask: Function;\r\n};\r\n\r\nconst CreateTask = (CreateTaskProps: ICreateTaskProps) => {\r\n\t\r\n\tconst [value, setValue] = useState(\"\");\r\n\r\n\t/**\r\n\t * Creates a task based on the user's input.\r\n\t * \r\n\t * Prevent default actions from the event.\r\n\t * If the event value is empty, return immediately.\r\n\t * Add the task to the React State.\r\n\t * Reset the user's input value to an emtpy string.\r\n\t * \r\n\t * @param {React.FormEvent<HTMLFormElement>} event - React Event \r\n\t */\r\n\tconst handleSubmitToCreateTask = async (event: React.FormEvent<HTMLFormElement>): Promise<void> => {\r\n\t\tevent.preventDefault();\r\n\t\tif (!value) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tCreateTaskProps.addTask(value);\r\n\t\tsetValue(\"\");\r\n\t};\r\n\r\n\treturn (\r\n\t\t<IonItem>\r\n\t\t\t<form onSubmit={handleSubmitToCreateTask}\r\n\t\t\t\tnoValidate\r\n\t\t\t\tautoComplete=\"off\">\r\n\t\t\t\t<IonLabel>Task</IonLabel>\r\n\t\t\t\t<IonInput id='create-task-input'\r\n\t\t\t\t\tvalue={value}\r\n\t\t\t\t\tplaceholder=\"Add a new Task\"\r\n\t\t\t\t\tonIonChange={event => setValue((event.target as HTMLInputElement).value)}\r\n\t\t\t\t\tautofocus />\r\n\t\t\t</form>\r\n\t\t</IonItem>\r\n\t);\r\n};\r\n\r\nexport default CreateTask;","import Dexie from 'dexie';\r\nimport { IPreference } from '../entity/ipreference';\r\nimport { IDatabaseUpdate } from '../entity/IDatabaseUpdate';\r\nimport { IBrowserTask } from '../entity/iBrowserTask';\r\n\r\nexport class ToDoDb extends Dexie {\r\n    tasks: Dexie.Table<IBrowserTask, string>;\r\n    preferences: Dexie.Table<IPreference, number>;\r\n    databaseUpdates: Dexie.Table<IDatabaseUpdate, number>;\r\n\r\n    constructor() {\r\n        super('ToDoDb');\r\n        this.version(1).stores({\r\n            tasks: `id, owner`,\r\n            preferences: `++id`,\r\n            databaseUpdates: `++id, owner`\r\n        });\r\n        this.tasks = this.table(\"tasks\");\r\n        this.preferences = this.table(\"preferences\");\r\n        this.databaseUpdates = this.table(\"databaseUpdates\");\r\n    }\r\n}","import axios from 'axios';\r\nimport { ITask } from '../entity/itask';\r\nimport { IRemoteTask } from '../entity/iRemoteTask';\r\nimport { ToDoDb } from '../service/ToDoDb';\r\nimport NetworkService from '../service/network-service';\r\nimport consola from 'consola';\r\nimport { IBrowserTask } from '../entity/iBrowserTask';\r\n\r\nclass TaskService {\r\n    private db: ToDoDb;\r\n    private domain: string = 'http://192.168.1.2:8080/';\r\n    private getPath: string = 'to-do/task/';\r\n    private deletePath: string = 'to-do/task/'\r\n    private getRemoteUpdatesPath: string = 'to-do/updates/';\r\n    private getOwnerUpdatesPath: string = 'by-owner/';\r\n    private countTasksPath: string = 'total-count-for/';\r\n    private getMultipleTasksPath: string = 'to-do/task/?owner=';\r\n    private putPath: string = 'to-do/task/';\r\n    public isOnline: boolean = false;\r\n    private remoteUpdatesGetPath: string = 'to-do/database-changes';\r\n\r\n    constructor(networkconnectivity: NetworkService) {\r\n        this.db = new ToDoDb();\r\n        this.subscribeToNetworkConnectivity(networkconnectivity);\r\n        this.isOnline = networkconnectivity.isOnline();\r\n    }\r\n\r\n    private subscribeToNetworkConnectivity(networkService: NetworkService): void {\r\n        networkService.connectionChanged().subscribe(online => {\r\n            this.isOnline = online;\r\n            consola.info(`The application is ${this.isOnline ? 'online' : 'offline'}`);\r\n        });\r\n    }\r\n\r\n    updateTaskName(task: IBrowserTask) {\r\n        consola.info(`INITIATING - update for browser and remote databases.`);\r\n\r\n        task.lastModified = Date.now() / 1000;\r\n\r\n        this.updateBrowserTaskName(task).then( async () => {\r\n            this.updateRemoteTask(task);\r\n            return true;\r\n        }).catch(error => consola.error(`An Error Occured Saving To The Browser Database: ${error}`));\r\n    }\r\n\r\n    updateBrowserTask(browserId: string, updatedTask: ITask) {\r\n        consola.info('EXECUTING - update task in browser db.')\r\n        this.db.transaction('rw', this.db.tasks, this.db.databaseUpdates, () => {\r\n            this.db.tasks.update(browserId, updatedTask);\r\n        });\r\n    }\r\n\r\n    updateBrowserTaskWithRemoteTaskId(browserTask: IBrowserTask, remoteTaskId: number) {\r\n        this.db.transaction('rw', this.db.tasks, this.db.databaseUpdates, () => {\r\n            if (browserTask.id !== undefined) {\r\n                this.db.tasks.update(\r\n                    browserTask.id,\r\n                    { remoteId: remoteTaskId }\r\n                );\r\n            }\r\n        });\r\n    }\r\n\r\n    updateBrowserTaskName(task: IBrowserTask): Promise<void> {\r\n        consola.info(`EXECUTING - update task in browser db.`);\r\n\r\n        return this.db.transaction('rw', this.db.tasks, this.db.databaseUpdates, () => {\r\n            if (task.id !== undefined) {\r\n                this.db.tasks.update(\r\n                    task.id,\r\n                    { name: task.name }\r\n                );\r\n            }\r\n        });\r\n    }\r\n\r\n    public updateTaskStatus(task: IBrowserTask) {\r\n        task.lastModified = Date.now() / 1000;\r\n        this.updateBrowserTaskStatus(task);\r\n        this.updateRemoteTask(task);\r\n    }\r\n\r\n    private updateBrowserTaskStatus(task: IBrowserTask) {\r\n        this.db.transaction('rw', this.db.tasks, this.db.databaseUpdates, () => {\r\n            if (task.id !== undefined) {\r\n                this.db.tasks.update(\r\n                    task.id,\r\n                    { status: task.status }\r\n                );\r\n            }\r\n        });\r\n    }\r\n\r\n    deleteBrowserTaskById(id: string) {\r\n        consola.info(`EXECUTING - delete task in browser db.`);\r\n\r\n        this.db.transaction('rw', this.db.tasks, this.db.databaseUpdates, () => {\r\n            this.db.tasks.where(\"id\").equals(id).delete();\r\n        });\r\n    }\r\n\r\n    async deleteRemoteTaskById(id: number) {\r\n        consola.info(`EXECUTING - delete task in remote db.`);\r\n\r\n        let response = await axios.delete(this.domain + this.deletePath + id);\r\n        return response.status;\r\n    }\r\n\r\n    public async getAllBrowserTasks(): Promise<IBrowserTask[]> {\r\n        return this.db.tasks.toArray();\r\n    }\r\n\r\n    getAllBrowserTasksByOwner(owner: string): Promise<IBrowserTask[]> {\r\n        return this.db.tasks.where('owner').equals(owner).toArray();\r\n    }\r\n\r\n    public async insertTask(newUserTask: IBrowserTask): Promise<number> {\r\n        consola.info(`INITIATING - insert for browser and remote databases.`);\r\n        await this.insertBrowserTask(newUserTask);\r\n        return await this.createRemoteTask(newUserTask);\r\n    }\r\n\r\n    insertBrowserTask(newUserTask: IBrowserTask): Promise<string> {\r\n        consola.info(`EXECUTING - insert task into browser db.`);\r\n        return this.db.tasks.put(newUserTask).then( (id: string) => id);\r\n    }\r\n\r\n    public convertRemoteTaskToBrowserTask(remoteTask: IRemoteTask): IBrowserTask {\r\n        const browserTask: IBrowserTask = {\r\n            name: remoteTask.name,\r\n            owner: remoteTask.owner,\r\n            status: remoteTask.status,\r\n            deadline: remoteTask.deadline,\r\n            difficulty: remoteTask.difficulty,\r\n            importance: remoteTask.importance,\r\n            lastModified: remoteTask.lastModified,\r\n            created: remoteTask.created,\r\n            id: remoteTask.browserId,\r\n\t        remoteId: remoteTask.id\r\n        }\r\n\r\n        return browserTask;\r\n    }\r\n\r\n    public convertRemoteTasksToBrowserTasks(remoteTasks: IRemoteTask[]): IBrowserTask[] {\r\n        const browserTasks: IBrowserTask[] = [];\r\n        remoteTasks.forEach(element => {\r\n            browserTasks.push(this.convertRemoteTaskToBrowserTask(element))\r\n        });\r\n        return browserTasks;\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * Retrieve the task from the api.\r\n     * \r\n     * Because the api does not care about the javascript browser id, it does not store this data point.\r\n     * We manually set the incoming ITask's id to undefined and set the incoming id to remoteId .\r\n     * \r\n     * @param remoteId This is the primary key from the api.\r\n     */\r\n    async getTaskFromRemote(remoteId: number): Promise<IBrowserTask> {\r\n        if (!this.isOnline) {\r\n            return Promise.reject(\"Application is not online.\");\r\n        }\r\n        let response = await axios.get(this.domain + this.getPath + remoteId);\r\n        let browserTaskFromRemote: IBrowserTask = {\r\n            ...response.data,\r\n            id: undefined,\r\n            remoteId: response.data.id,\r\n        };\r\n        return browserTaskFromRemote;\r\n    }\r\n\r\n    async getAllRemoteTasks(owner: string): Promise<IRemoteTask[]> {\r\n        if (!this.isOnline) {\r\n            return Promise.reject(\"Application is not online.\");\r\n        }\r\n        let response = await axios.get(this.domain + this.getMultipleTasksPath + owner);\r\n        return response.data;\r\n    }\r\n\r\n    // async getTaskFromBrowser(id: string): Dexie.Promise<IBrowserTask | undefined> {\r\n    //     let response: IBrowserTask | undefined = await this.db.tasks.get(id);\r\n    //     return response;\r\n    // }\r\n\r\n    private async updateRemoteTask(browserTask: IBrowserTask): Promise<boolean> {\r\n        consola.info(`EXECUTING - update task in remote db.`);\r\n\r\n        if (!this.isOnline) {\r\n            return Promise.reject(\"Application is not online.\");\r\n        }\r\n        let response = await axios.put(\r\n            this.domain + this.putPath,\r\n            browserTask\r\n        );\r\n        if (response.status !== 200) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    // async getRemoteUpdatesByOwner(owner: string): Promise<any> {\r\n    //     if (!this.isOnline) {\r\n    //         return Promise.reject(\"Application is not online.\");\r\n    //     }\r\n    //     let response = await axios.get(this.domain + this.getRemoteUpdatesPath + this.getOwnerUpdatesPath + owner);\r\n    //     return response.data;\r\n    // }\r\n\r\n    // async getBrowserUpdatesByOwner(owner: string): Promise<IDatabaseUpdate[]> {\r\n    //     return this.db.databaseUpdates.where('owner').equals(owner).toArray();\r\n    // }\r\n\r\n    async createRemoteTask(browserTask: ITask): Promise<number> {\r\n        consola.info(`EXECUTING - insert task into remote db.`);\r\n\r\n        if (!this.isOnline) {\r\n            return Promise.reject(\"Application is not online.\");\r\n        }\r\n\r\n        let remoteId = await axios.post(\r\n                this.domain + this.getPath,\r\n                browserTask\r\n            ).then(response => {\r\n                const regEx = new RegExp(/\\d+$/);\r\n                const idFromHeader: RegExpExecArray | null = regEx.exec(response.headers.location);\r\n                return idFromHeader;\r\n            }).catch(error => {\r\n                consola.error(`Error when creating a remote task: ${error}`);\r\n                return null;\r\n            });\r\n\r\n        if (remoteId === null) {\r\n            return -1;\r\n        }\r\n\r\n        return parseInt(remoteId[0]);\r\n    }\r\n\r\n    public getMissingTasksFromRemote(remotes: IRemoteTask[], allBrowserTasks: IBrowserTask[]): void {\r\n        consola.info(`INITIATING - A browser sync at the owner level.`);\r\n\r\n        const allRemoteTasks: IBrowserTask[] = this.convertRemoteTasksToBrowserTasks(\r\n            remotes\r\n        );\r\n        const remoteTasksIds: string[] = allRemoteTasks.map(x => x.id);\r\n        const browserTasksIds: string[] = allBrowserTasks.map(x => x.id);\r\n        const remoteIdsNotInBrowser: string[] = remoteTasksIds.filter(x => !browserTasksIds.includes(x));\r\n        const missingRemoteTasks: IBrowserTask[] = allRemoteTasks.filter(x => remoteIdsNotInBrowser.includes(x.id));\r\n        missingRemoteTasks.forEach(task => this.insertBrowserTask(task));\r\n    }\r\n};\r\n\r\nexport default TaskService;","import { Subject } from 'rxjs';\r\n\r\nclass NetworkService {\r\n    private internalConnectionChanged = new Subject<boolean>();\r\n\r\n    constructor() {\r\n        window.addEventListener('online', () => this.updateOnlineStatus());\r\n        window.addEventListener('offline', () => this.updateOnlineStatus());\r\n    }\r\n\r\n    isOnline() {\r\n        return !!window.navigator.onLine;\r\n    }\r\n\r\n    connectionChanged() {\r\n        return this.internalConnectionChanged.asObservable();\r\n    }\r\n\r\n    private updateOnlineStatus() {\r\n        this.internalConnectionChanged.next(window.navigator.onLine);\r\n    }\r\n}\r\n\r\nexport default NetworkService;","import React, { useState } from 'react';\r\nimport {\r\n\tIonItem,\r\n\tIonLabel,\r\n\tIonInput\r\n} from '@ionic/react';\r\nimport { ITask } from '../entity/itask';\r\n\r\ninterface IEditTaskProps {\r\n    editTask: Function;\r\n    currentTask: ITask;\r\n};\r\n\r\nconst EditTask = (EditTaskProps: IEditTaskProps) => {\r\n\t\r\n\tconst [userValue, setValue] = useState<string>(EditTaskProps.currentTask.name as string);\r\n\r\n\t/**\r\n\t * Edits a task based on the user's input.\r\n\t * \r\n\t * Prevent default actions from the event.\r\n\t * If the event value is empty, return immediately.\r\n\t * Add the task to the React State.\r\n\t * Reset the user's input value to an emtpy string.\r\n\t * \r\n\t * @param {React.FormEvent<HTMLFormElement>} event - React Event \r\n\t */\r\n\tconst handleSubmitToEditTask = async (event: React.FormEvent<HTMLFormElement>): Promise<void> => {\r\n\t\tevent.preventDefault();\r\n\t\tif (!userValue) {\r\n\t\t\treturn;\r\n        }\r\n        const updatedTask = {\r\n\t\t\t...EditTaskProps.currentTask, \r\n\t\t\tname: userValue\r\n        };\r\n\t\tEditTaskProps.editTask(updatedTask);\r\n\t\tsetValue(\"\");\r\n\t};\r\n\r\n\treturn (\r\n\t\t<IonItem>\r\n\t\t\t<form onSubmit={handleSubmitToEditTask}\r\n\t\t\t\tnoValidate\r\n\t\t\t\tautoComplete=\"off\">\r\n\t\t\t\t<IonLabel>Edit</IonLabel>\r\n                <IonInput value={userValue}\r\n\t\t\t\t\tplaceholder=\"Add a new Task\"\r\n\t\t\t\t\tonIonChange={event => setValue((event.target as HTMLInputElement).value)} />\r\n\t\t\t</form>\r\n\t\t</IonItem>\r\n\t);\r\n};\r\n\r\nexport default EditTask;","import React from 'react';\r\nimport {\r\n\tIonItem,\r\n\tIonLabel\r\n} from '@ionic/react';\r\nimport { checkmarkCircleOutline } from 'ionicons/icons';\r\nimport { IBrowserTask } from '../entity/iBrowserTask';\r\nimport { Status } from '../enum/status';\r\nimport EditTask from '../components/EditTask';\r\n\r\ninterface ITaskItemProps {\r\n    task: IBrowserTask;\r\n    synced: boolean;\r\n    editable: Map<string, boolean>;\r\n    editTask: Function;\r\n};\r\nconst TaskItem: Function = (taskItemProps: ITaskItemProps): JSX.Element => {\r\n    if (taskItemProps.editable?.get(taskItemProps.task.id) === true) {\r\n        return (\r\n            <EditTask currentTask={taskItemProps.task}\r\n                editTask={taskItemProps.editTask} />\r\n        );\r\n    }\r\n\r\n    let itemAttributes = {\r\n        button: true,\r\n        detail: false,\r\n        detailIcon: undefined\r\n    }\r\n    if (taskItemProps.task.status === Status.COMPLETED) {\r\n        itemAttributes.detail = true;\r\n        itemAttributes.detailIcon = checkmarkCircleOutline as any;\r\n    }\r\n\r\n    let labelAttributes = {\r\n        color: 'secondary'\r\n    };\r\n    if (taskItemProps.synced) {\r\n        labelAttributes.color = 'success';\r\n    }\r\n    \r\n    const label = React.createElement(IonLabel, labelAttributes, taskItemProps.task.name);\r\n    return React.createElement(IonItem, itemAttributes, label);\r\n};\r\n\r\nexport default TaskItem;","import {\r\n\tIonButtons,\r\n\tIonCard,\r\n\tIonCardContent,\r\n\tIonCardHeader,\r\n\tIonCardSubtitle,\r\n\tIonCardTitle,\r\n\tIonContent,\r\n\tIonHeader,\r\n\tIonItem,\r\n\tIonLabel,\r\n\tIonList,\r\n\tIonMenuButton,\r\n\tIonPage,\r\n\tIonTitle,\r\n\tIonToolbar,\r\n\tIonFab,\r\n\tIonFabButton,\r\n\tIonIcon,\r\n\tIonProgressBar\r\n} from '@ionic/react';\r\nimport {\r\n\tIonItemSliding,\r\n\tIonItemOption,\r\n\tIonItemOptions\r\n} from '@ionic/react';\r\nimport { add } from 'ionicons/icons';\r\nimport CreateTask from '../components/CreateTask';\r\nimport React, {\r\n\tuseState,\r\n\tuseEffect\r\n} from 'react';\r\nimport './Home.css';\r\nimport { Difficulty } from '../enum/difficulty';\r\nimport { Importance } from '../enum/importance';\r\nimport { Status } from '../enum/status';\r\nimport TaskService from '../service/task-service';\r\nimport NetworkService from '../service/network-service';\r\nimport consola from 'consola';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { IBrowserTask } from '../entity/iBrowserTask';\r\nimport { IRemoteTask } from '../entity/iRemoteTask';\r\nimport TaskItem from '../components/TaskItem';\r\nimport { ITasks } from '../entity/itask';\r\n\r\nconst HomePage: React.FC = () => {\r\n\r\n\tconst [tasks, setTasks] = useState<IBrowserTask[]>([]);\r\n\t//const [hasError, setError] = useState<boolean>(false);\r\n\tconst [isLoading, setIsLoading] = useState<boolean>(false);\r\n\tconst [tasksRemaining, setTasksRemaining] = useState<number>(0);\r\n\tconst [editable, setEditability] = useState<Map<string, boolean>>();\r\n\tconst [addingNewTask, setAddingNewTask] = useState<boolean>(false);\r\n\t//const toggleLoading: Function = (): void => setIsLoading(!isLoading);\r\n\tconst toggleCreateTask: Function = (): void => setAddingNewTask(!addingNewTask);\r\n\tconst getIndexOfTaskWithId: Function = (id: string): number => tasks.findIndex(task => task.id === id);\r\n\tlet taskService: TaskService = new TaskService(new NetworkService());\r\n\r\n\t/**\r\n     * Updates setTasksRemaining anytime there is a change to `tasks`\r\n     */\r\n\tuseEffect( (): void => {\r\n\t\tsetTasksRemaining(tasks.filter(task => task.status === Status.ACTIVE).length);\r\n\t}, [tasks]);\r\n\r\n\t/**\r\n\t * Checks for any missing tasks from the remote server every minute\r\n\t */\r\n\tuseEffect( () => {\r\n\t\tconst interval = setInterval(() => {\r\n\t\t\tconst getRemoteDatabaseUpdates: Function = async (): Promise<boolean> => {\r\n\t\t\t\tlet requestUpdate: boolean = false;\r\n\t\t\t\tconst remotes: IRemoteTask[] = await taskService.getAllRemoteTasks('logan connor');\r\n\t\t\t\tconst allBrowserTasks: IBrowserTask[] = await taskService.getAllBrowserTasksByOwner('logan connor');\r\n\t\t\r\n\t\t\t\t// retrieve missing records from remote\r\n\t\t\t\tif (remotes.length !== allBrowserTasks.length) {\r\n\t\t\t\t\ttaskService.getMissingTasksFromRemote(remotes, allBrowserTasks);\r\n\t\t\t\t\trequestUpdate = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// retrieve modified records from remote\r\n\t\t\t\tallBrowserTasks.forEach( async x => {\r\n\t\t\t\t\tconst matchingRemoteTask = remotes.find(y => y.browserId === x.id);\r\n\t\t\t\t\tif (matchingRemoteTask !== undefined) {\r\n\t\t\t\t\t\tconst matchingConvertedTask = taskService.convertRemoteTaskToBrowserTask(matchingRemoteTask);\r\n\t\t\t\t\t\tif (matchingConvertedTask?.lastModified > x.lastModified) {\r\n\t\t\t\t\t\t\ttaskService.updateBrowserTask(matchingConvertedTask.id, matchingConvertedTask);\r\n\t\t\t\t\t\t\trequestUpdate = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\treturn requestUpdate;\r\n\t\t\t};\r\n\t\t\tconst getLocalDatabaseUpdates: Function = async (updateRequested: boolean) => {\r\n\t\t\t\tconst browserTasks = await taskService.getAllBrowserTasks();\r\n\t\t\t\tif (updateRequested || tasks.length !== browserTasks.length) {\r\n\t\t\t\t\tsetTasks(browserTasks);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\tgetRemoteDatabaseUpdates().then((updateRequested: boolean) => getLocalDatabaseUpdates(updateRequested));\r\n\t\t}, 60000);\r\n\t\treturn () => clearInterval(interval);\r\n\t});\r\n\r\n\t/**\r\n\t * Loads the application state with data from the browser db.\r\n\t */\r\n\tuseEffect( (): void => {\r\n\t\tsetIsLoading(true);\r\n\t\ttaskService.getAllBrowserTasks().then(results => {\r\n\t\t\tsetTasks(results);\r\n\t\t\tsetIsLoading(false);\r\n\t\t});\r\n\t\r\n\t}, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\t\r\n\t/**\r\n     * Add a new task in the application.\r\n     */\r\n\tconst addTask: Function = (name: string): void => {\r\n\t\tconsola.info(`STARTING - adding task for ${name}`);\r\n\r\n\t\tconst newUserTask: IBrowserTask = {\r\n\t\t\tid: uuidv4(),\r\n\t\t\tname: name,\r\n\t\t\towner: \"logan connor\",\r\n\t\t\tstatus: Status.ACTIVE,\r\n\t\t\tcreated: Date.now() / 1000,\r\n\t\t\tlastModified: Date.now() / 1000,\r\n\t\t\tdifficulty: Difficulty.NORMAL,\r\n\t\t\timportance: Importance.MEDIUM\r\n\t\t};\r\n\r\n\t\tconst newTasks = [\r\n\t\t\t...tasks,\r\n\t\t\tnewUserTask\r\n\t\t];\r\n\t\tsetTasks(newTasks);\r\n\t\ttoggleCreateTask();\r\n\r\n\t\ttaskService.insertTask(newUserTask).then(remoteId => {\r\n\t\t\tconst taskWithRemoteId = {\r\n\t\t\t\t...newUserTask,\r\n\t\t\t\tremoteId: remoteId\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\tconst newTasksWithRemoteId = [\r\n\t\t\t\t...tasks,\r\n\t\t\t\ttaskWithRemoteId\r\n\t\t\t];\r\n\t\t\tsetTasks(newTasksWithRemoteId);\r\n\t\r\n\t\t\ttaskService.updateBrowserTaskWithRemoteTaskId(newUserTask, remoteId);\r\n\t\t});\r\n\t};\r\n\r\n\t/**\r\n     * Edits an existing task in the application.\r\n     */\r\n\tconst editTask: Function = (updatedTask: IBrowserTask): void => {\r\n\t\tconsola.info(`STARTING - editing task for ${updatedTask.name}`);\r\n\r\n\t\tif (updatedTask.id === undefined) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst taskIndex: number = getIndexOfTaskWithId(updatedTask.id);\r\n\t\tconst allExistingTasks: IBrowserTask[] = [\r\n\t\t\t...tasks.slice(0, taskIndex),\r\n\t\t\tupdatedTask,\r\n\t\t\t...tasks.slice(taskIndex + 1)\r\n\t\t];\r\n\t\tsetTasks(allExistingTasks);\r\n\t\ttaskService.updateTaskName(updatedTask);\r\n\t\ttoggleEditablility(updatedTask);\r\n\t};\r\n\r\n\tconst toggleEditablility: Function = (selectedTask: IBrowserTask): void => {\r\n\t\tif (selectedTask.id === undefined) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// initially undefined so populate it\r\n\t\tif (editable === undefined) {\r\n\t\t\tlet newValue = new Map<string, boolean>();\r\n\t\t\tnewValue.set(selectedTask.id, true);\r\n\t\t\tsetEditability(newValue);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet updateEditable = new Map<string, boolean>(editable);\r\n\t\t// see if an existing value just needs to be switched\r\n\t\tupdateEditable.forEach((value, key) => {\r\n\t\t\tif (key === selectedTask.id) {\r\n\t\t\t\tupdateEditable.set(key, !value);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// if the id passed in still isn't in the map - set it\r\n\t\tif (!updateEditable.has(selectedTask.id)) {\r\n\t\t\tupdateEditable.set(selectedTask.id, true);\r\n\t\t}\r\n\r\n\t\tsetEditability(updateEditable);\r\n\t};\r\n\r\n\tconst toggleTaskStatusIndicator: Function = (selectedTask: IBrowserTask): ITasks => {\r\n\t\tlet existingTaskToUpdate: IBrowserTask = tasks.filter(x => x.id === selectedTask.id)[0];\r\n\t\tconst taskIndex: number = getIndexOfTaskWithId(selectedTask.id);\r\n\r\n\t\tif (existingTaskToUpdate.status === Status.COMPLETED) {\r\n\t\t\texistingTaskToUpdate.status = Status.ACTIVE;\r\n\t\t} else if (existingTaskToUpdate.status === Status.ACTIVE) {\r\n\t\t\texistingTaskToUpdate.status = Status.COMPLETED;\r\n\t\t}\r\n\r\n\t\tconst allExistingTasks: IBrowserTask[] = [\r\n\t\t\t...tasks.slice(0, taskIndex),\r\n\t\t\texistingTaskToUpdate,\r\n\t\t\t...tasks.slice(taskIndex + 1)\r\n\t\t];\r\n\r\n\t\tsetTasks(allExistingTasks);\r\n\t\treturn allExistingTasks;\r\n\t};\r\n\r\n\t/**\r\n     * Sets an existing task to completed.\r\n     */\r\n\tconst toggleTaskStatus: Function = (selectedTask: IBrowserTask): void => {\r\n\t\ttoggleTaskStatusIndicator(selectedTask);\r\n\t\tif (selectedTask.id === undefined) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\ttaskService.updateTaskStatus(selectedTask);\r\n\t};\r\n\r\n\t/**\r\n     * Removes an existing task from the application.\r\n     */\r\n\tconst removeTask: Function = (selectedTask: IBrowserTask): void => {\r\n\t\tconsola.info(`STARTING - removing task for ${selectedTask.name}`);\r\n\r\n\t\tif (selectedTask.id === undefined) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst existingTasks: IBrowserTask[] = [...tasks];\r\n\t\tconst taskIndex: number = getIndexOfTaskWithId(selectedTask.id);\r\n\t\texistingTasks.splice(taskIndex, 1);\r\n\t\tsetTasks(existingTasks);\r\n\t\ttaskService.deleteBrowserTaskById(selectedTask.id);\r\n\t\tif (selectedTask.remoteId !== null && selectedTask.remoteId !== undefined) {\r\n\t\t\ttaskService.deleteRemoteTaskById(selectedTask.remoteId);\r\n\t\t}\r\n\t};\r\n\r\n\tconst TasksList: Function = (): JSX.Element => {\r\n\t\tlet items;\r\n\r\n\t\tif (tasks.length === 0) {\r\n\t\t\titems = (\r\n\t\t\t\t<IonItem>\r\n\t\t\t\t\t<IonLabel>Looks like everythings done. Great Job!</IonLabel>\r\n\t\t\t\t</IonItem>\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\titems = tasks.map((x, index) => {\r\n\r\n\t\t\t\tconst existsOnRemote: boolean = x.remoteId !== undefined ? x.remoteId > 0 ? true : false : false;\r\n\t\t\t\tconst statusToggleMessage: string = x.status === Status.COMPLETED ? \"Undo\" : \"Done\";\r\n\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<IonItemSliding key={index}>\r\n\t\t\t\t\t\t<IonItemOptions side=\"start\">\r\n\t\t\t\t\t\t\t<IonItemOption color=\"primary\"\r\n\t\t\t\t\t\t\t\tonClick={() => toggleTaskStatus(x)}>\r\n\t\t\t\t\t\t\t\t{statusToggleMessage}\r\n\t\t\t\t\t\t\t</IonItemOption>\r\n\t\t\t\t\t\t\t<IonItemOption color=\"secondary\"\r\n\t\t\t\t\t\t\t\tonClick={() => toggleEditablility(x)}>\r\n\t\t\t\t\t\t\t\tEdit\r\n\t\t\t\t\t\t\t</IonItemOption>\r\n\t\t\t\t\t\t</IonItemOptions>\r\n\t\t\t\t\t\t<TaskItem task={x}\r\n\t\t\t\t\t\t\tsynced={existsOnRemote}\r\n\t\t\t\t\t\t\teditable={editable}\r\n\t\t\t\t\t\t\teditTask={editTask} />\r\n\t\t\t\t\t\t<IonItemOptions side=\"end\">\r\n\t\t\t\t\t\t\t<IonItemOption color=\"danger\"\r\n\t\t\t\t\t\t\t\tonClick={() => removeTask(x)} >\r\n\t\t\t\t\t\t\t\tDelete\r\n\t\t\t\t\t\t\t</IonItemOption>\r\n\t\t\t\t\t\t</IonItemOptions>\r\n\t\t\t\t\t</IonItemSliding>\r\n\t\t\t\t);\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<IonList>\r\n\t\t\t\t{items}\r\n\t\t\t</IonList>\r\n\t\t);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<IonPage>\r\n\t\t\t<IonHeader>\r\n\t\t\t\t<IonToolbar color='primary'>\r\n\t\t\t\t\t<IonButtons slot=\"start\" color='light'>\r\n\t\t\t\t\t\t<IonMenuButton />\r\n\t\t\t\t\t</IonButtons>\r\n\t\t\t\t\t<IonTitle>Home</IonTitle>\r\n\t\t\t\t</IonToolbar>\r\n\t\t\t</IonHeader>\r\n\t\t\t{ isLoading && <IonProgressBar type=\"indeterminate\"></IonProgressBar> }\r\n\t\t\t<IonContent className='create-input'>\r\n\t\t\t\t<IonCard className=\"tasks-card\">\r\n\t\t\t\t\t<IonCardHeader>\r\n\t\t\t\t\t\t<IonCardSubtitle>There are {tasksRemaining} incomplete tasks</IonCardSubtitle>\r\n\t\t\t\t\t\t<IonCardTitle>Tasks</IonCardTitle>\r\n\t\t\t\t\t</IonCardHeader>\r\n\t\t\t\t\t<IonCardContent>\r\n\t\t\t\t\t\t<TasksList />\r\n\t\t\t\t\t</IonCardContent>\r\n\t\t\t\t</IonCard>\r\n\t\t\t\t<IonFab vertical=\"bottom\" horizontal=\"end\" slot=\"fixed\">\r\n\t\t\t\t\t<IonFabButton onClick={() => {toggleCreateTask()}}>\r\n\t\t\t\t\t\t<IonIcon icon={add} />\r\n\t\t\t\t\t</IonFabButton>\r\n\t\t\t\t</IonFab>\r\n\t\t\t\t{\r\n\t\t\t\t\taddingNewTask &&\r\n\t\t\t\t\t\t<IonList>\r\n\t\t\t\t\t\t\t<CreateTask addTask={addTask} />\r\n\t\t\t\t\t\t</IonList>\r\n\t\t\t\t}\r\n\t\t\t</IonContent>\r\n\t\t</IonPage>\r\n\t);\r\n};\r\n\r\nexport default HomePage;\r\n","import { IonButtons, IonContent, IonHeader, IonIcon, IonItem, IonList, IonMenuButton, IonPage, IonTitle, IonToolbar } from '@ionic/react';\nimport { americanFootball, basketball, beer, bluetooth, boat, build, flask, football, paperPlane, wifi } from 'ionicons/icons';\nimport React from 'react';\n\nconst ListPage: React.FC = () => {\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar>\n          <IonButtons slot=\"start\">\n            <IonMenuButton />\n          </IonButtons>\n          <IonTitle>List</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n\n      <IonContent>\n        <ListItems />\n      </IonContent>\n    </IonPage>\n  );\n};\n\nconst ListItems = () => {\n  const icons = [\n    flask,\n    wifi,\n    beer,\n    football,\n    basketball,\n    paperPlane,\n    americanFootball,\n    boat,\n    bluetooth,\n    build\n  ];\n\n  const items = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map(x => {\n    return (\n      <IonItem key={x}>\n        <IonIcon icon={icons[x - 1]} slot=\"start\" />\n        Item {x}\n        <div className=\"item-note\" slot=\"end\">\n          This is item # {x}\n        </div>\n      </IonItem>\n    );\n  });\n\n  return <IonList>{items}</IonList>;\n};\n\nexport default ListPage;\n","import React, { useState } from 'react';\r\nimport {\r\n\tIonItem,\r\n\tIonLabel,\r\n\tIonInput\r\n} from '@ionic/react';\r\n\r\ninterface ICreateAccountProps {\r\n\taddUser: Function;\r\n};\r\n\r\nconst CreateAccount = (CreateAccountProps: ICreateAccountProps) => {\r\n\t\r\n    const [commonName, setCommonName] = useState<string>('');\r\n    const [userName, setUserName] = useState<string>('');\r\n    const [password, setPassword] = useState<string>('');\r\n    // const [email, setEmail] = useState<string>('');\r\n\r\n    // const validateEmail: Function = (email: string) => email.includes('@');\r\n    // const validatePassword: Function = (password: string) => password.length > 4;\r\n\r\n\tconst handleSubmitToCreateAccount = async (event: React.FormEvent<HTMLFormElement>): Promise<void> => {\r\n\t\tevent.preventDefault();\r\n\t\tif (!userName) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tCreateAccountProps.addUser(userName);\r\n\t\tsetUserName('');\r\n\t\tconsole.log(`account created for ${userName}`);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<IonItem>\r\n\t\t\t<form onSubmit={handleSubmitToCreateAccount}\r\n\t\t\t\tnoValidate\r\n\t\t\t\tautoComplete=\"off\">\r\n\t\t\t\t<IonLabel>Name</IonLabel>\r\n\t\t\t\t<IonInput id='create-account-name-input'\r\n\t\t\t\t\tvalue={commonName}\r\n\t\t\t\t\tplaceholder=\"Ni jiao shenme mingzi\"\r\n\t\t\t\t\tonIonChange={event => setCommonName((event.target as HTMLInputElement).value)}\r\n\t\t\t\t\tautofocus />\r\n                <IonLabel>User Name</IonLabel>\r\n\t\t\t\t<IonInput id='create-account-user-name-input'\r\n\t\t\t\t\tvalue={userName}\r\n\t\t\t\t\tplaceholder=\"Unique name\"\r\n\t\t\t\t\tonIonChange={event => setUserName((event.target as HTMLInputElement).value)} />\r\n                <IonLabel>Password</IonLabel>\r\n\t\t\t\t<IonInput id='create-account-password-input'\r\n\t\t\t\t\tvalue={password}\r\n\t\t\t\t\tplaceholder=\"1234 that's my password...\"\r\n\t\t\t\t\tonIonChange={event => setPassword((event.target as HTMLInputElement).value)} />\r\n\t\t\t</form>\r\n\t\t</IonItem>\r\n\t);\r\n};\r\n\r\nexport default CreateAccount;","import {\r\n\tIonButtons,\r\n\tIonCard,\r\n\tIonCardContent,\r\n\tIonCardHeader,\r\n\tIonCardSubtitle,\r\n\tIonCardTitle,\r\n\tIonContent,\r\n\tIonHeader,\r\n\tIonMenuButton,\r\n\tIonPage,\r\n\tIonTitle,\r\n\tIonToolbar\r\n} from '@ionic/react';\r\nimport React from 'react';\r\nimport './Home.css';\r\nimport CreateAccount from '../components/CreateAccount';\r\n\r\nconst SignIn: React.FC = () => {\r\n    return (\r\n\t\t<IonPage>\r\n\t\t\t<IonHeader>\r\n\t\t\t\t<IonToolbar color='primary'>\r\n                    <IonButtons slot=\"start\"\r\n                        color='light'>\r\n\t\t\t\t\t\t<IonMenuButton />\r\n\t\t\t\t\t</IonButtons>\r\n\t\t\t\t\t<IonTitle>Sign In</IonTitle>\r\n\t\t\t\t</IonToolbar>\r\n\t\t\t</IonHeader>\r\n\t\t\t<IonContent className='create-input'>\r\n                <IonCard className=\"tasks-card\"\r\n                    color='tertiary'>\r\n\t\t\t\t\t<IonCardHeader>\r\n\t\t\t\t\t\t<IonCardSubtitle>It's easy and free!</IonCardSubtitle>\r\n\t\t\t\t\t\t<IonCardTitle>Create An Account</IonCardTitle>\r\n\t\t\t\t\t</IonCardHeader>\r\n\t\t\t\t\t<IonCardContent>\r\n                        <CreateAccount addUser={ ()=> {} } />\r\n\t\t\t\t\t</IonCardContent>\r\n\t\t\t\t</IonCard>\r\n                <IonCard className=\"tasks-card\"\r\n                    color='secondary'>\r\n\t\t\t\t\t<IonCardHeader>\r\n\t\t\t\t\t\t<IonCardSubtitle>Welcome back!</IonCardSubtitle>\r\n\t\t\t\t\t\t<IonCardTitle>Sign In</IonCardTitle>\r\n\t\t\t\t\t</IonCardHeader>\r\n\t\t\t\t\t<IonCardContent>\r\n                        \r\n\t\t\t\t\t</IonCardContent>\r\n\t\t\t\t</IonCard>\r\n\t\t\t</IonContent>\r\n\t\t</IonPage>\r\n\t);\r\n};\r\n\r\nexport default SignIn;","import { useState, useEffect } from 'react';\r\nimport { ToDoDb } from '../service/ToDoDb';\r\n\r\n/**\r\n * Prompts the user to install the application.\r\n */\r\nconst AddToHomescreenPrompt = () => {\r\n\r\n    const db = new ToDoDb();\r\n\r\n\r\n    /**\r\n     * @param { boolean } prompt This constant can change\r\n     * @param { isTrusted: boolean } prompt This constant can change\r\n     */\r\n    const [prompt, setPrompt] = useState(false);\r\n\r\n\r\n\r\n    /**\r\n     * An identical function exists within app-drawer.js\r\n     */\r\n    const promptToInstall = () => {\r\n        if (prompt) {\r\n            return prompt.prompt();\r\n        }\r\n        return Promise.reject(new Error('Tried installing before browser sent \"beforeinstallprompt\" event'));\r\n    };\r\n\r\n    const initializePreferencesIfNecessary = count => {\r\n        if (count === 0) {\r\n            const initialize = {\r\n                username: 'loganconnor44',\r\n                promptUserForInstallation: true\r\n            };\r\n            db.preferences.put(initialize);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        db.preferences.count().then(initializePreferencesIfNecessary);\r\n        \r\n        const ready = event => {\r\n            event.preventDefault();\r\n            setPrompt(event);\r\n        };\r\n        window.addEventListener(\"beforeinstallprompt\", ready);\r\n        return () => {\r\n            window.removeEventListener(\"beforeinstallprompt\", ready);\r\n        };\r\n    }, []);\r\n\r\n    return [prompt, promptToInstall];\r\n};\r\n\r\nexport default AddToHomescreenPrompt;","import React, { useState, useEffect } from 'react';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\nimport AddToHomescreenPrompt from './AddToHomeScreenPrompt';\r\nimport { ToDoDb } from '../service/ToDoDb';\r\n\r\n/**\r\n * React web component to install the WebApk or a web shortcut to the user's homescreen.\r\n */\r\nconst InstallPwa = () => {\r\n    const [prompt, promptToInstall] = AddToHomescreenPrompt();\r\n    const [isAddToHomescreenVisible, setIsAddToHomescreenVisible] = useState(false);\r\n    const [promptUserForInstallation, setPromptUserForInstallation] = useState(false);\r\n    const db = new ToDoDb();\r\n\r\n    \r\n\r\n    const dismissAndStorePreference = event => {\r\n        hideAddToHomescreen();\r\n        doNotPromptAgain(event);\r\n    };\r\n\r\n    const hideAddToHomescreen = () => setIsAddToHomescreenVisible(false);\r\n\r\n    const installAndHideMessage = () => {\r\n        hideAddToHomescreen();\r\n        promptToInstall();\r\n    };\r\n\r\n    const doNotPromptAgain = event => {\r\n        event.preventDefault();\r\n        db.preferences.toArray().then(results => {\r\n            db.preferences.update(results[0].id, {promptUserForInstallation: false});\r\n        });\r\n    };\r\n    \r\n    db.preferences.toArray().then(results => {\r\n        if (results.length !== 0) {\r\n            setPromptUserForInstallation(results[0].promptUserForInstallation);\r\n        }\r\n    });\r\n    \r\n    useEffect(() => {\r\n        /**\r\n         * Determines if the prompt is false or anything else.\r\n         * Prompt may be an object such as { isTrusted: boolean }\r\n         */\r\n        const promptEventIsReady = () => prompt !== false ? prompt : false;\r\n\r\n        if (promptEventIsReady() && promptUserForInstallation) {\r\n            setIsAddToHomescreenVisible(true);\r\n        }\r\n    }, [prompt, promptUserForInstallation]);\r\n\r\n    const message = \"Click here to download this app.\";\r\n\r\n    return ( \r\n        isAddToHomescreenVisible ?\r\n            <Snackbar anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                    \r\n                }}\r\n                open={isAddToHomescreenVisible}\r\n                autoHideDuration={3000} >\r\n                <SnackbarContent message={\r\n                    <div style={{\r\n                            display: 'flex',\r\n                            alignItems: 'center'\r\n                        }} >\r\n                        <InfoIcon style={{marginRight: 4}} />\r\n                    {message}\r\n                    </div>\r\n                    }\r\n                    style={{backgroundColor: '#43a047'}}\r\n                    action={\r\n                        <div>\r\n                            <IconButton key=\"download-and-dismiss\" aria-label=\"download-and-dismiss\" onClick={installAndHideMessage} >\r\n                                <GetAppIcon />\r\n                            </IconButton>\r\n                            <IconButton key=\"close\" aria-label=\"close\" onClick={dismissAndStorePreference} >\r\n                                <CloseIcon />\r\n                            </IconButton>\r\n                        </div>\r\n                    } />\r\n            </Snackbar>\r\n            :\r\n            <div></div>\r\n    );\r\n};\r\n\r\nexport default InstallPwa;","import React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport { IonApp, IonRouterOutlet, IonSplitPane } from '@ionic/react';\r\nimport { IonReactRouter } from '@ionic/react-router';\r\nimport { AppPage } from './declarations';\r\n\r\nimport Menu from './components/Menu';\r\nimport Home from './pages/Home';\r\nimport List from './pages/List';\r\nimport SignIn from './pages/SignIn';\r\nimport { home, list, person } from 'ionicons/icons';\r\nimport InstallPwa from './components/InstallPwa';\r\n\r\n/* Core CSS required for Ionic components to work properly */\r\nimport '@ionic/react/css/core.css';\r\n\r\n/* Basic CSS for apps built with Ionic */\r\nimport '@ionic/react/css/normalize.css';\r\nimport '@ionic/react/css/structure.css';\r\nimport '@ionic/react/css/typography.css';\r\n\r\n/* Optional CSS utils that can be commented out */\r\nimport '@ionic/react/css/padding.css';\r\nimport '@ionic/react/css/float-elements.css';\r\nimport '@ionic/react/css/text-alignment.css';\r\nimport '@ionic/react/css/text-transformation.css';\r\nimport '@ionic/react/css/flex-utils.css';\r\nimport '@ionic/react/css/display.css';\r\n\r\n/* Theme variables */\r\nimport './theme/variables.css';\r\n\r\nconst appPages: AppPage[] = [\r\n\t{\r\n\t\ttitle: 'Sign In',\r\n\t\turl: '/sign-in',\r\n\t\ticon: person\r\n\t},\r\n\t{\r\n\t\ttitle: 'Home',\r\n\t\turl: '/home',\r\n\t\ticon: home\r\n\t},\r\n\t{\r\n\t\ttitle: 'List',\r\n\t\turl: '/home/list',\r\n\t\ticon: list\r\n\t}\r\n];\r\n\r\nconst App: React.FC = () => (\r\n\t<IonApp>\r\n\t\t<InstallPwa />\r\n\t\t<IonReactRouter basename=\"/to-do-ionic-react\">\r\n\t\t\t<IonSplitPane contentId=\"main\">\r\n\t\t\t\t<Menu appPages={appPages} />\r\n\t\t\t\t<IonRouterOutlet id=\"main\">\r\n\t\t\t\t\t<Route path=\"/sign-in\" component={SignIn} exact={true} />\r\n\t\t\t\t\t<Route path=\"/home\" component={Home} exact={true} />\r\n\t\t\t\t\t<Route path=\"/home/list\" component={List} exact={true} />\r\n\t\t\t\t\t<Route path=\"/\" render={() => <Redirect to=\"/home\" />} exact={true} />\r\n\t\t\t\t</IonRouterOutlet>\r\n\t\t\t</IonSplitPane>\r\n\t\t</IonReactRouter>\r\n\t</IonApp>\r\n);\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}